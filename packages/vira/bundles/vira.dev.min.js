var vira;
/******/ (() => {
  // webpackBootstrap
  /******/ "use strict";
  /******/ var __webpack_modules__ = {
    /***/ "./src/components/helmet.ts":
      /*!**********************************!*\
  !*** ./src/components/helmet.ts ***!
  \**********************************/
      /***/ (__unused_webpack_module, exports, __webpack_require__) => {
        Object.defineProperty(exports, "__esModule", { value: true });
        exports.Helmet = void 0;
        const core_1 = __webpack_require__(
          /*! ../core */ "./src/core/index.ts",
        );
        class Helmet extends core_1.Component {
          static SSR(body) {
            const reg = /(<helmet\b[^>]*>)((.|\n)*?)(<\/helmet>)/gm;
            const head = [];
            const footer = [];
            if (
              document === null || document === void 0 ? void 0 : document.head
            ) {
              let children = document.head.children;
              for (let i = 0; i < children.length; i++) {
                if (head.indexOf(children[i]) === -1) {
                  head.push(children[i]);
                }
              }
            }
            let result;
            while ((result = reg.exec(body)) != null) {
              const first = result[1];
              const second = result[2];
              const toHead = first.includes('data-placement="head"');
              if (toHead && !head.includes(second)) head.push(second);
              else if (!footer.includes(second)) footer.push(second);
            }
            const cleanBody = body.replace(reg, "");
            return {
              body: cleanBody,
              head,
              footer,
            };
          }
          mount() {
            var _a, _b, _c, _d;
            for (const element of this.props.children) {
              const parent = this.props.footer ? document.body : document.head;
              const tag = element.tagName;
              let attrs = [];
              attrs.push(element.innerText);
              for (let i = 0; i < element.attributes.length; i++) {
                attrs.push(
                  (_a = element.attributes.item(i)) === null || _a === void 0
                    ? void 0
                    : _a.name.toLowerCase(),
                );
                attrs.push(
                  (_b = element.attributes.item(i)) === null || _b === void 0
                    ? void 0
                    : _b.value.toLowerCase(),
                );
              }
              if (tag === "HTML" || tag === "BODY") {
                const htmlTag = document.getElementsByTagName(tag)[0];
                for (let i = 1; i < element.attributes.length; i += 2) {
                  htmlTag.setAttribute(attrs[i], attrs[i + 1]);
                }
                return;
              } else if (tag === "TITLE") {
                const titleTag = document.getElementsByTagName(tag);
                if (titleTag.length) {
                  titleTag[0].text = element.text;
                } else {
                  const titleTag = (0, core_1.h)(
                    "title",
                    null,
                    element.innerHTML,
                  );
                  parent.appendChild(titleTag);
                }
                return;
              }
              let exists = false;
              attrs = attrs.sort();
              const el = document.getElementsByTagName(tag);
              for (let i = 0; i < el.length; i++) {
                let attrs2 = [];
                attrs2.push(el[i].innerText);
                for (let j = 0; j < el[i].attributes.length; j++) {
                  attrs2.push(
                    (_c = el[i].attributes.item(j)) === null || _c === void 0
                      ? void 0
                      : _c.name.toLowerCase(),
                  );
                  attrs2.push(
                    (_d = el[i].attributes.item(j)) === null || _d === void 0
                      ? void 0
                      : _d.value.toLowerCase(),
                  );
                }
                attrs2 = attrs2.sort();
                if (
                  attrs.length > 0 &&
                  attrs2.length > 0 &&
                  JSON.stringify(attrs) === JSON.stringify(attrs2)
                )
                  exists = true;
              }
              if (!exists) {
                (0, core_1.appendChildren)(parent, element);
              }
            }
          }
          render() {
            if (isSSR) {
              return (0, core_1.h)(
                "helmet",
                {
                  "data-ssr": true,
                  "data-placement": this.props.footer ? "footer" : "head",
                },
                this.props.children,
              );
            } else {
              return [];
            }
          }
        }
        exports.Helmet = Helmet;

        /***/
      },

    /***/ "./src/components/img.ts":
      /*!*******************************!*\
  !*** ./src/components/img.ts ***!
  \*******************************/
      /***/ function (__unused_webpack_module, exports, __webpack_require__) {
        var __rest =
          (this && this.__rest) ||
          function (s, e) {
            var t = {};
            for (var p in s)
              if (
                Object.prototype.hasOwnProperty.call(s, p) &&
                e.indexOf(p) < 0
              )
                t[p] = s[p];
            if (s != null && typeof Object.getOwnPropertySymbols === "function")
              for (
                var i = 0, p = Object.getOwnPropertySymbols(s);
                i < p.length;
                i++
              ) {
                if (
                  e.indexOf(p[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(s, p[i])
                )
                  t[p[i]] = s[p[i]];
              }
            return t;
          };
        Object.defineProperty(exports, "__esModule", { value: true });
        exports.Img = void 0;
        const core_1 = __webpack_require__(
          /*! ../core */ "./src/core/index.ts",
        );
        const utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
        class Img extends core_1.Component {
          constructor(props) {
            super(props);
            const { key, src } = this.props;
            this.id =
              (0, utils_1.strToHash)(src) +
              "-" +
              (0, utils_1.strToHash)(JSON.stringify(this.props));
            if (key) {
              this.id += `$key-${key}`;
            }
            if (!this.state) {
              this.setState({ image: "", isLoaded: false });
            }
          }
          mount() {
            const _a = this.props,
              { lazy = true, placeholder, key, ref, children } = _a,
              rest = __rest(_a, [
                "lazy",
                "placeholder",
                "key",
                "ref",
                "children",
              ]);
            if (!lazy) return;
            const observer = new IntersectionObserver(
              (entries, observer) => {
                for (const entry of entries) {
                  if (entry.isIntersecting) {
                    observer.disconnect();
                    this.state.image = (0, core_1.h)(
                      "img",
                      Object.assign({}, rest),
                    );
                    if (this.state.image.complete) {
                      this.state.isLoaded = true;
                      this.update();
                    } else {
                      this.state.image.onload = () => {
                        this.state.isLoaded = true;
                        this.update();
                      };
                    }
                  }
                }
              },
              { threshold: [0, 1] },
            );
            observer.observe(this.elements[0]);
          }
          render() {
            const _a = this.props,
              { lazy = true, src, placeholder, key, ref, children } = _a,
              rest = __rest(_a, [
                "lazy",
                "src",
                "placeholder",
                "key",
                "ref",
                "children",
              ]);
            if (!lazy) {
              this.state.image = (0, core_1.h)(
                "img",
                Object.assign({ src }, rest),
              );
              return this.state.image;
            }
            if (this.state.isLoaded) {
              return this.state.image;
            } else if (typeof placeholder === "string") {
              return (0, core_1.h)(
                "img",
                Object.assign({ src: placeholder }, rest),
              );
            } else if (typeof placeholder === "function") {
              return placeholder();
            } else {
              const style = {
                backgroundColor: "lightgray",
                width: "100px",
                height: "100px",
              };
              const { width, height } = rest,
                others = __rest(rest, ["width", "height"]);
              if (width) {
                style.width = width;
              }
              if (height) {
                style.height = height;
              }
              return (0, core_1.h)("div", Object.assign({ style }, others));
            }
          }
        }
        exports.Img = Img;

        /***/
      },

    /***/ "./src/components/index.ts":
      /*!*********************************!*\
  !*** ./src/components/index.ts ***!
  \*********************************/
      /***/ (__unused_webpack_module, exports, __webpack_require__) => {
        Object.defineProperty(exports, "__esModule", { value: true });
        exports.ViraLink =
          exports.Switch =
          exports.Route =
          exports.Visible =
          exports.Suspense =
          exports.Link =
          exports.Img =
          exports.Helmet =
            void 0;
        var helmet_1 = __webpack_require__(
          /*! ./helmet */ "./src/components/helmet.ts",
        );
        Object.defineProperty(exports, "Helmet", {
          enumerable: true,
          get: function () {
            return helmet_1.Helmet;
          },
        });
        var img_1 = __webpack_require__(/*! ./img */ "./src/components/img.ts");
        Object.defineProperty(exports, "Img", {
          enumerable: true,
          get: function () {
            return img_1.Img;
          },
        });
        var link_1 = __webpack_require__(
          /*! ./link */ "./src/components/link.ts",
        );
        Object.defineProperty(exports, "Link", {
          enumerable: true,
          get: function () {
            return link_1.Link;
          },
        });
        var suspense_1 = __webpack_require__(
          /*! ./suspense */ "./src/components/suspense.ts",
        );
        Object.defineProperty(exports, "Suspense", {
          enumerable: true,
          get: function () {
            return suspense_1.Suspense;
          },
        });
        var visible_1 = __webpack_require__(
          /*! ./visible */ "./src/components/visible.ts",
        );
        Object.defineProperty(exports, "Visible", {
          enumerable: true,
          get: function () {
            return visible_1.Visible;
          },
        });
        var router_1 = __webpack_require__(
          /*! ./router */ "./src/components/router.ts",
        );
        Object.defineProperty(exports, "Route", {
          enumerable: true,
          get: function () {
            return router_1.Route;
          },
        });
        Object.defineProperty(exports, "Switch", {
          enumerable: true,
          get: function () {
            return router_1.Switch;
          },
        });
        Object.defineProperty(exports, "ViraLink", {
          enumerable: true,
          get: function () {
            return router_1.Link;
          },
        });

        /***/
      },

    /***/ "./src/components/link.ts":
      /*!********************************!*\
  !*** ./src/components/link.ts ***!
  \********************************/
      /***/ function (__unused_webpack_module, exports, __webpack_require__) {
        var __rest =
          (this && this.__rest) ||
          function (s, e) {
            var t = {};
            for (var p in s)
              if (
                Object.prototype.hasOwnProperty.call(s, p) &&
                e.indexOf(p) < 0
              )
                t[p] = s[p];
            if (s != null && typeof Object.getOwnPropertySymbols === "function")
              for (
                var i = 0, p = Object.getOwnPropertySymbols(s);
                i < p.length;
                i++
              ) {
                if (
                  e.indexOf(p[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(s, p[i])
                )
                  t[p[i]] = s[p[i]];
              }
            return t;
          };
        Object.defineProperty(exports, "__esModule", { value: true });
        exports.Link = void 0;
        const core_1 = __webpack_require__(
          /*! ../core */ "./src/core/index.ts",
        );
        const helmet_1 = __webpack_require__(
          /*! ./helmet */ "./src/components/helmet.ts",
        );
        class Link extends core_1.Component {
          mount() {
            const { prefetch, href, delay, back = false } = this.props;
            if (back) {
              this.elements[0].addEventListener(
                "click",
                function onClick(e) {
                  e.preventDefault();
                  const target = e.target;
                  if (target.href === document.referrer) {
                    window.history.back();
                  } else {
                    window.location.href = href;
                  }
                }.bind(this),
              );
            }
            if (delay) {
              this.elements[0].addEventListener(
                "click",
                function onClick(e) {
                  e.preventDefault();
                  setTimeout(() => {
                    window.location.href = href;
                  }, delay);
                }.bind(this),
              );
            }
            if (prefetch) {
              if (prefetch === "hover") {
                this.prefetchOnHover();
              } else if (prefetch === "visible") {
                this.prefetchOnVisible();
              } else {
                this.addPrefetch();
              }
            }
          }
          prefetchOnHover() {
            this.elements[0].addEventListener(
              "mouseover",
              function onHover() {
                this.addPrefetch();
              }.bind(this),
              { once: true },
            );
          }
          prefetchOnVisible() {
            const observer = new IntersectionObserver(
              (entries, observer) => {
                for (const entry of entries) {
                  if (entry.isIntersecting) {
                    observer.disconnect();
                    this.addPrefetch();
                  }
                }
              },
              { threshold: [0, 1] },
            );
            observer.observe(this.elements[0]);
          }
          addPrefetch() {
            let exists = false;
            const links = document.getElementsByTagName("link");
            for (const link of links) {
              if (
                link.getAttribute("rel") === "prefetch" &&
                link.getAttribute("href") === this.props.href
              ) {
                exists = true;
              }
            }
            if (!exists) {
              const prefetch = (0, core_1.h)("link", {
                rel: "prefetch",
                href: this.props.href,
                as: "document",
              });
              document.head.appendChild(prefetch);
            }
          }
          render() {
            const _a = this.props,
              { children, prefetch, delay, back = false, ref } = _a,
              rest = __rest(_a, [
                "children",
                "prefetch",
                "delay",
                "back",
                "ref",
              ]);
            const a = (0, core_1.h)("a", Object.assign({}, rest), ...children);
            if (prefetch && isSSR) {
              const link = (0, core_1.h)("link", {
                rel: "prefetch",
                href: this.props.href,
                as: "document",
              });
              const helmet = (0, core_1.h)(helmet_1.Helmet, null, link);
              return (0, core_1.h)(core_1.Fragment, null, [helmet, a]);
            } else {
              return a;
            }
          }
        }
        exports.Link = Link;

        /***/
      },

    /***/ "./src/components/router.ts":
      /*!**********************************!*\
  !*** ./src/components/router.ts ***!
  \**********************************/
      /***/ (__unused_webpack_module, exports, __webpack_require__) => {
        Object.defineProperty(exports, "__esModule", { value: true });
        exports.Link = exports.to = exports.Route = exports.Switch = void 0;
        const core_1 = __webpack_require__(
          /*! ../core */ "./src/core/index.ts",
        );
        const instances = [];
        function register(comp) {
          instances.push(comp);
        }
        function unregister(comp) {
          instances.splice(instances.indexOf(comp), 1);
        }
        function historyPush(path) {
          window.history.pushState({}, "", path);
          for (const instance of instances) {
            instance.forceUpdate();
          }
        }
        function historyReplace(path) {
          window.history.replaceState({}, "", path);
          for (const instance of instances) {
            instance.forceUpdate();
          }
        }
        function matchPath(pathname, options) {
          const { exact = false, regex } = options;
          let { path } = options;
          if (!path) {
            return {
              path: null,
              url: pathname,
              isExact: true,
            };
          }
          let match;
          let params = {};
          // path with params
          if (path.includes("/:")) {
            const pathArr = path.split("/");
            const pathnameArr = pathname.split("/");
            pathArr.forEach((p, i) => {
              if (/^:/.test(p)) {
                const key = p.slice(1);
                const value = pathnameArr[i];
                // if a regex is provided, check it it matches
                if (regex && regex[key]) {
                  const regexMatch = regex[key].test(value);
                  if (!regexMatch) return null;
                }
                params = Object.assign(Object.assign({}, params), {
                  [key]: value,
                });
                pathArr[i] = pathnameArr[i];
              }
            });
            path = pathArr.join("/");
          }
          // catch all
          if (path === "*") match = [pathname];
          // regular path
          if (!match) match = new RegExp(`^${path}`).exec(pathname);
          if (!match) return null;
          const url = match[0];
          const isExact = pathname === url;
          if (exact && !isExact) return null;
          return {
            path,
            url,
            isExact,
            params,
          };
        }
        class Switch extends core_1.Component {
          constructor() {
            super(...arguments);
            this.index = 0;
            this.path = "";
            this.match = { index: -1, path: "" };
          }
          mount() {
            window.addEventListener("popstate", this.forceUpdate.bind(this));
            register(this);
          }
          destroy() {
            unregister(this);
            window.removeEventListener("popstate", this.forceUpdate.bind(this));
          }
          forceUpdate() {
            this.findChild();
            if (this.shouldUpdate()) this.update();
          }
          findChild() {
            this.match = { index: -1, path: "" };
            for (const [i, child] of this.props.children.entries()) {
              const { path, exact, regex } = child.props;
              const match = matchPath(
                typeof isSSR !== "undefined"
                  ? _nano.location.pathname
                  : window.location.pathname,
                {
                  path,
                  exact,
                  regex,
                },
              );
              if (match) {
                this.match.index = i;
                this.match.path = path;
                return;
              }
            }
          }
          shouldUpdate() {
            return (
              this.path !== this.match.path || this.index !== this.match.index
            );
          }
          render() {
            this.findChild();
            const child = this.props.children[this.match.index];
            if (this.match.index === -1) {
              this.path = "";
              this.index = 0;
            }
            if (child) {
              const { path } = child.props;
              this.path = path;
              this.index = this.match.index;
              const el = (0, core_1.renderElement)(child);
              return (0, core_1.renderElement)(el);
            } else if (this.props.fallback) {
              return (0, core_1.renderElement)(this.props.fallback);
            } else {
              return (0, core_1.h)("div", { class: "route" }, "not found");
            }
          }
        }
        exports.Switch = Switch;
        function Route({ path, regex, children }) {
          for (const child of children) {
            if (child.props)
              child.props = Object.assign(Object.assign({}, child.props), {
                route: { path, regex },
              });
          }
          return children;
        }
        exports.Route = Route;
        const to = (to, replace = false) => {
          replace ? historyReplace(to) : historyPush(to);
        };
        exports.to = to;
        function Link({ to, replace, children }) {
          function onClick(event) {
            event.preventDefault();
            replace ? historyReplace(to) : historyPush(to);
          }
          return (0, core_1.h)("a", { href: to, onClick }, children);
        }
        exports.Link = Link;

        /***/
      },

    /***/ "./src/components/suspense.ts":
      /*!************************************!*\
  !*** ./src/components/suspense.ts ***!
  \************************************/
      /***/ function (__unused_webpack_module, exports, __webpack_require__) {
        var __awaiter =
          (this && this.__awaiter) ||
          function (thisArg, _arguments, P, generator) {
            function adopt(value) {
              return value instanceof P
                ? value
                : new P(function (resolve) {
                    resolve(value);
                  });
            }
            return new (P || (P = Promise))(function (resolve, reject) {
              function fulfilled(value) {
                try {
                  step(generator.next(value));
                } catch (e) {
                  reject(e);
                }
              }
              function rejected(value) {
                try {
                  step(generator["throw"](value));
                } catch (e) {
                  reject(e);
                }
              }
              function step(result) {
                result.done
                  ? resolve(result.value)
                  : adopt(result.value).then(fulfilled, rejected);
              }
              step(
                (generator = generator.apply(thisArg, _arguments || [])).next(),
              );
            });
          };
        var __rest =
          (this && this.__rest) ||
          function (s, e) {
            var t = {};
            for (var p in s)
              if (
                Object.prototype.hasOwnProperty.call(s, p) &&
                e.indexOf(p) < 0
              )
                t[p] = s[p];
            if (s != null && typeof Object.getOwnPropertySymbols === "function")
              for (
                var i = 0, p = Object.getOwnPropertySymbols(s);
                i < p.length;
                i++
              ) {
                if (
                  e.indexOf(p[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(s, p[i])
                )
                  t[p[i]] = s[p[i]];
              }
            return t;
          };
        Object.defineProperty(exports, "__esModule", { value: true });
        exports.Suspense = void 0;
        const core_1 = __webpack_require__(
          /*! ../core */ "./src/core/index.ts",
        );
        const utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
        class Suspense extends core_1.Component {
          constructor(props) {
            super(props);
            this.isReady = false;
            const _a = this.props,
              { fallback, cache = false, children } = _a,
              rest = __rest(_a, ["fallback", "cache", "children"]);
            this.id = (0, utils_1.strToHash)(
              JSON.stringify(rest, function (_key, val) {
                return typeof val === "function" ? `${val}` : val;
              }),
            );
          }
          mount() {
            return __awaiter(this, void 0, void 0, function* () {
              const _a = this.props,
                { fallback, cache = false, children } = _a,
                rest = __rest(_a, ["fallback", "cache", "children"]);
              if (cache) this.initialState = {};
              if (this.loadFromCache(cache)) return;
              const promises = Object.values(rest).map((p) => p());
              const resolved = yield Promise.all(promises);
              const data = this.prepareData(rest, resolved, cache);
              this.addDataToChildren(data);
              this.isReady = true;
              this.update();
            });
          }
          loadFromCache(cache) {
            const cached =
              this.state && cache && Object.keys(this.state).length;
            if (cache) {
              this.addDataToChildren(this.state);
              this.isReady = true;
            }
            return cached;
          }
          ssr() {
            const _a = this.props,
              { fallback, cache = false, children } = _a,
              rest = __rest(_a, ["fallback", "cache", "children"]);
            const funcs = Object.values(rest).map((p) => p());
            const data = this.prepareData(rest, funcs, false);
            this.addDataToChildren(data);
          }
          addDataToChildren(data) {
            for (const child of this.props.children) {
              if (child.props) {
                child.props = Object.assign(
                  Object.assign({}, child.props),
                  data,
                );
              }
            }
          }
          prepareData(rest, func, cache) {
            const data = Object.keys(rest).reduce((acc, item, index) => {
              if (cache) {
                this.state = Object.assign(Object.assign({}, this.state), {
                  [item]: func[index],
                });
              }
              return Object.assign(Object.assign({}, acc), {
                [item]: func[index],
              });
            }, {});
            return data;
          }
          render() {
            if (typeof isSSR === "undefined") {
              const { cache = false } = this.props;
              this.loadFromCache(cache);
              return this.isReady ? this.props.children : this.props.fallback;
            } else {
              this.ssr();
              return this.props.children;
            }
          }
        }
        exports.Suspense = Suspense;

        /***/
      },

    /***/ "./src/components/visible.ts":
      /*!***********************************!*\
  !*** ./src/components/visible.ts ***!
  \***********************************/
      /***/ (__unused_webpack_module, exports, __webpack_require__) => {
        Object.defineProperty(exports, "__esModule", { value: true });
        exports.Visible = void 0;
        const core_1 = __webpack_require__(
          /*! ../core */ "./src/core/index.ts",
        );
        class Visible extends core_1.Component {
          constructor() {
            super(...arguments);
            this.isVisible = false;
          }
          mount() {
            const observer = new IntersectionObserver(
              (entries, observer) => {
                for (const entry of entries) {
                  if (entry.isIntersecting) {
                    observer.disconnect();
                    this.isVisible = true;
                    this.update();
                  }
                }
              },
              { threshold: [0, 1] },
            );
            observer.observe(this.elements[0]);
          }
          render() {
            if (this.isVisible) {
              if (this.props.onVisible) {
                this.props.onVisible();
              }
              return (0, core_1.render)(
                this.props.component || this.props.children[0],
              );
            } else {
              return (0, core_1.h)("div", {
                "data-visible": false,
                visibility: "hidden",
              });
            }
          }
        }
        exports.Visible = Visible;

        /***/
      },

    /***/ "./src/core/appendChildren.ts":
      /*!************************************!*\
  !*** ./src/core/appendChildren.ts ***!
  \************************************/
      /***/ (__unused_webpack_module, exports, __webpack_require__) => {
        Object.defineProperty(exports, "__esModule", { value: true });
        exports.appendChildren = void 0;
        const _1 = __webpack_require__(/*! . */ "./src/core/index.ts");
        function appendChildren(element, children) {
          if (!Array.isArray(children)) {
            appendChildren(element, [children]);
            return;
          }
          if (typeof children === "object") {
            children = Array.from(children);
          }
          for (const child of children) {
            if (Array.isArray(child)) {
              appendChildren(element, child);
            } else {
              let comp = (0, _1.renderElement)(child);
              if (comp) {
                if (Array.isArray(comp)) {
                  appendChildren(element, comp);
                } else {
                  element.appendChild(
                    !(comp === null || comp === void 0 ? void 0 : comp.nodeType)
                      ? document.createTextNode("" + comp)
                      : comp,
                  );
                }
              }
            }
          }
        }
        exports.appendChildren = appendChildren;

        /***/
      },

    /***/ "./src/core/component.ts":
      /*!*******************************!*\
  !*** ./src/core/component.ts ***!
  \*******************************/
      /***/ (__unused_webpack_module, exports, __webpack_require__) => {
        Object.defineProperty(exports, "__esModule", { value: true });
        exports.Component = void 0;
        const utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
        const _1 = __webpack_require__(/*! . */ "./src/core/index.ts");
        class Component {
          constructor(props) {
            this.props = props;
            this._elements = [];
            this.id = this._getHash();
          }
          render(_update) {}
          mount() {}
          beforeMount() {}
          destroy() {}
          _getHash() {}
          setState(state, shouldUpdate = false) {
            if (state && typeof state === "object") {
              this.state = Object.assign(Object.assign({}, this.state), state);
            } else this.state = state;
            if (shouldUpdate) this.update();
          }
          get state() {
            return _1._state.get(this.id);
          }
          set state(value) {
            _1._state.set(this.id, value);
          }
          set initialState(state) {
            if (!this.state) this.state = state;
          }
          get elements() {
            return this._elements;
          }
          set elements(elements) {
            if (!Array.isArray(elements)) {
              elements = [elements];
            }
            for (const el of elements) {
              this._elements.push(el);
            }
          }
          addNodeRemoveListener() {
            if (/^[^{]+{\s+}$/gm.test(this.destroy.toString())) return;
            (0, utils_1.onNodeRemove)(this.elements[0], () => {
              if (!this._skipUnmout) {
                this.destroy();
              }
            });
          }
          //@ts-ignore
          _mount() {
            this.addNodeRemoveListener();
            this.mount();
          }
          _destory() {
            if (this._hasUnmounted) return;
            this.destroy();
            this._hasUnmounted = true;
          }
          update(update) {
            this._skipUnmout = true;
            const oldElements = [...this.elements];
            this._elements = [];
            let el = this.render(update);
            el = (0, _1.renderElement)(el);
            this.elements = el;
            const parent = oldElements[0].parentElement;
            if (!parent)
              console.warn("Component needs a parent element to get updated!");
            for (const child of this.elements) {
              parent.insertBefore(child, oldElements[0]);
            }
            for (let child of oldElements) {
              child.remove();
              //@ts-ignore
              child = null;
            }
            this.addNodeRemoveListener();
            //@ts-ignore
            (0, utils_1.nextTick)(() => {
              this._skipUnmout = false;
              if (!this.elements[0].isConnected) {
                this._destory();
              }
            });
          }
        }
        exports.Component = Component;

        /***/
      },

    /***/ "./src/core/context.ts":
      /*!*****************************!*\
  !*** ./src/core/context.ts ***!
  \*****************************/
      /***/ (__unused_webpack_module, exports) => {
        Object.defineProperty(exports, "__esModule", { value: true });
        exports.createContext = void 0;
        function createContext(ctx) {
          let _ctx = ctx;
          return {
            Provider(props) {
              if (props.value) {
                _ctx = props.value;
                return props.children;
              }
            },
            Consumer(props) {
              return {
                component: props.children[0](_ctx),
                props: Object.assign(Object.assign({}, props), {
                  context: _ctx,
                }),
              };
            },
            get() {
              return _ctx;
            },
            set(ctx) {
              _ctx = ctx;
            },
          };
        }
        exports.createContext = createContext;

        /***/
      },

    /***/ "./src/core/fragment.ts":
      /*!******************************!*\
  !*** ./src/core/fragment.ts ***!
  \******************************/
      /***/ (__unused_webpack_module, exports) => {
        Object.defineProperty(exports, "__esModule", { value: true });
        exports.Fragment = void 0;
        const Fragment = (props) => {
          return props.children;
        };
        exports.Fragment = Fragment;

        /***/
      },

    /***/ "./src/core/h.ts":
      /*!***********************!*\
  !*** ./src/core/h.ts ***!
  \***********************/
      /***/ (__unused_webpack_module, exports, __webpack_require__) => {
        Object.defineProperty(exports, "__esModule", { value: true });
        exports.h = void 0;
        const utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
        const _1 = __webpack_require__(/*! . */ "./src/core/index.ts");
        function h(comp, props, ...children) {
          if (typeof comp !== "string") {
            return {
              component: comp,
              props: Object.assign(Object.assign({}, props), {
                children: children,
              }),
            };
          }
          let ref;
          const element =
            comp === "svg" ? (0, _1.hNS)("svg") : document.createElement(comp);
          for (const p in props) {
            if (p === "style" && typeof props[p] === "object") {
              const styles = Object.keys(props[p])
                .map((k) => `${k}:${props[p][k]}`)
                .join(";")
                .replace(/[A-Z]/g, (match) => `-${match.toLowerCase()}`);
              props[p] = styles + ";";
            }
            if (p === "ref") {
              ref = props[p];
            }
            if ((0, utils_1.isEvent)(element, p.toLowerCase())) {
              element.addEventListener(p.toLowerCase().substring(2), (e) =>
                props[p](e),
              );
            } else {
              element.setAttribute(p, props[p]);
            }
          }
          (0, _1.appendChildren)(element, children);
          if (ref) {
            ref(element);
          }
          // @ts-ignore
          if (element.ssr) return element.ssr;
          return element;
        }
        exports.h = h;

        /***/
      },

    /***/ "./src/core/hydrate.ts":
      /*!*****************************!*\
  !*** ./src/core/hydrate.ts ***!
  \*****************************/
      /***/ (__unused_webpack_module, exports, __webpack_require__) => {
        Object.defineProperty(exports, "__esModule", { value: true });
        exports.hydrate = void 0;
        const _1 = __webpack_require__(/*! . */ "./src/core/index.ts");
        function hydrate(component, parent = null, removeChildNodes = true) {
          return (0, _1.render)(component, parent, removeChildNodes);
        }
        exports.hydrate = hydrate;

        /***/
      },

    /***/ "./src/core/index.ts":
      /*!***************************!*\
  !*** ./src/core/index.ts ***!
  \***************************/
      /***/ (__unused_webpack_module, exports, __webpack_require__) => {
        Object.defineProperty(exports, "__esModule", { value: true });
        exports.Store =
          exports.withStyles =
          exports.lazyHydration =
          exports._clearState =
          exports._state =
          exports.createContext =
          exports.Fragment =
          exports.Component =
          exports.hydrate =
          exports.hNS =
          exports.renderElement =
          exports.render =
          exports.h =
          exports.appendChildren =
            void 0;
        var appendChildren_1 = __webpack_require__(
          /*! ./appendChildren */ "./src/core/appendChildren.ts",
        );
        Object.defineProperty(exports, "appendChildren", {
          enumerable: true,
          get: function () {
            return appendChildren_1.appendChildren;
          },
        });
        var h_1 = __webpack_require__(/*! ./h */ "./src/core/h.ts");
        Object.defineProperty(exports, "h", {
          enumerable: true,
          get: function () {
            return h_1.h;
          },
        });
        var render_1 = __webpack_require__(
          /*! ./render */ "./src/core/render.ts",
        );
        Object.defineProperty(exports, "render", {
          enumerable: true,
          get: function () {
            return render_1.render;
          },
        });
        var renderElement_1 = __webpack_require__(
          /*! ./renderElement */ "./src/core/renderElement.ts",
        );
        Object.defineProperty(exports, "renderElement", {
          enumerable: true,
          get: function () {
            return renderElement_1.renderElement;
          },
        });
        Object.defineProperty(exports, "hNS", {
          enumerable: true,
          get: function () {
            return renderElement_1.hNS;
          },
        });
        var hydrate_1 = __webpack_require__(
          /*! ./hydrate */ "./src/core/hydrate.ts",
        );
        Object.defineProperty(exports, "hydrate", {
          enumerable: true,
          get: function () {
            return hydrate_1.hydrate;
          },
        });
        var component_1 = __webpack_require__(
          /*! ./component */ "./src/core/component.ts",
        );
        Object.defineProperty(exports, "Component", {
          enumerable: true,
          get: function () {
            return component_1.Component;
          },
        });
        var fragment_1 = __webpack_require__(
          /*! ./fragment */ "./src/core/fragment.ts",
        );
        Object.defineProperty(exports, "Fragment", {
          enumerable: true,
          get: function () {
            return fragment_1.Fragment;
          },
        });
        var context_1 = __webpack_require__(
          /*! ./context */ "./src/core/context.ts",
        );
        Object.defineProperty(exports, "createContext", {
          enumerable: true,
          get: function () {
            return context_1.createContext;
          },
        });
        var state_1 = __webpack_require__(/*! ./state */ "./src/core/state.ts");
        Object.defineProperty(exports, "_state", {
          enumerable: true,
          get: function () {
            return state_1._state;
          },
        });
        Object.defineProperty(exports, "_clearState", {
          enumerable: true,
          get: function () {
            return state_1._clearState;
          },
        });
        var lazyHydration_1 = __webpack_require__(
          /*! ./lazyHydration */ "./src/core/lazyHydration.ts",
        );
        Object.defineProperty(exports, "lazyHydration", {
          enumerable: true,
          get: function () {
            return lazyHydration_1.lazyHydration;
          },
        });
        var withStyles_1 = __webpack_require__(
          /*! ./withStyles */ "./src/core/withStyles.ts",
        );
        Object.defineProperty(exports, "withStyles", {
          enumerable: true,
          get: function () {
            return withStyles_1.withStyles;
          },
        });
        var store_1 = __webpack_require__(/*! ./store */ "./src/core/store.ts");
        Object.defineProperty(exports, "Store", {
          enumerable: true,
          get: function () {
            return store_1.Store;
          },
        });

        /***/
      },

    /***/ "./src/core/lazyHydration.ts":
      /*!***********************************!*\
  !*** ./src/core/lazyHydration.ts ***!
  \***********************************/
      /***/ (__unused_webpack_module, exports, __webpack_require__) => {
        Object.defineProperty(exports, "__esModule", { value: true });
        exports.lazyHydration = void 0;
        const components_1 = __webpack_require__(
          /*! ../components */ "./src/components/index.ts",
        );
        const _1 = __webpack_require__(/*! . */ "./src/core/index.ts");
        function lazyHydration(component, parent, removeChildNodes = true) {
          const cmp = (0, _1.h)(components_1.Visible, null, component);
          return (0, _1.hydrate)(cmp, parent, removeChildNodes);
        }
        exports.lazyHydration = lazyHydration;

        /***/
      },

    /***/ "./src/core/render.ts":
      /*!****************************!*\
  !*** ./src/core/render.ts ***!
  \****************************/
      /***/ (__unused_webpack_module, exports, __webpack_require__) => {
        Object.defineProperty(exports, "__esModule", { value: true });
        exports.removeAllChildNodes = exports.render = void 0;
        const _1 = __webpack_require__(/*! . */ "./src/core/index.ts");
        function render(cmp, parent = null, removeChildNodes = true) {
          let el = (0, _1.renderElement)(cmp);
          if (Array.isArray(el)) {
            el = el.map((c) => (0, _1.renderElement)(c));
            if (el.length === 1) {
              el = el[0];
            }
          }
          if (parent) {
            if (removeChildNodes) {
              removeAllChildNodes(parent);
            }
            if (
              el &&
              parent.id &&
              parent.id === el.id &&
              parent.parentElement
            ) {
              parent.parentElement.replaceChild(el, parent);
            } else {
              if (Array.isArray(el)) {
                el.map((c) =>
                  (0, _1.appendChildren)(parent, (0, _1.renderElement)(c)),
                );
              } else {
                (0, _1.appendChildren)(parent, (0, _1.renderElement)(el));
              }
            }
            if (parent.ssr) return parent.ssr;
            return parent;
          } else {
            if (typeof isSSR === "boolean" && isSSR && !Array.isArray(el))
              return [el];
            return el;
          }
        }
        exports.render = render;
        function removeAllChildNodes(el) {
          while (el.firstChild) {
            el.removeChild(el.firstChild);
          }
        }
        exports.removeAllChildNodes = removeAllChildNodes;

        /***/
      },

    /***/ "./src/core/renderElement.ts":
      /*!***********************************!*\
  !*** ./src/core/renderElement.ts ***!
  \***********************************/
      /***/ (__unused_webpack_module, exports, __webpack_require__) => {
        Object.defineProperty(exports, "__esModule", { value: true });
        exports.hNS = exports.renderElement = void 0;
        const utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
        function renderElement(cmp) {
          var _a;
          if (["undefined" || 0].includes(typeof cmp)) {
            return [];
          }
          if (cmp == null) {
            return [];
          }
          if (typeof cmp === "string") {
            return cmp;
          }
          if (typeof cmp === "number") {
            return "" + cmp;
          }
          if (
            (cmp === null || cmp === void 0 ? void 0 : cmp.tagName) &&
            cmp.tagName.toLowerCase() === "svg"
          ) {
            return SVG({ children: [cmp] });
          }
          if (cmp === null || cmp === void 0 ? void 0 : cmp.tagName) {
            return cmp;
          }
          if (
            cmp &&
            cmp.component &&
            cmp.component.prototype &&
            cmp.component.prototype.constructor &&
            /^class\s/.test(Function.prototype.toString.call(cmp.component))
          ) {
            return renderClassComponent(cmp);
          }
          if (cmp.component && typeof cmp.component === "function") {
            return renderFunctionalComponent(cmp);
          }
          if (Array.isArray(cmp)) {
            return cmp.map((c) => renderElement(c)).flat();
          }
          if (typeof cmp === "function") return renderElement(cmp());
          if (
            ((_a = cmp === null || cmp === void 0 ? void 0 : cmp.component) ===
              null || _a === void 0
              ? void 0
              : _a.tagName) &&
            typeof cmp.component.tagName === "string"
          )
            return renderElement(cmp.component);
          if (Array.isArray(cmp.component)) return renderElement(cmp.component);
          if (cmp.component) return renderElement(cmp.component);
        }
        exports.renderElement = renderElement;
        function renderFunctionalComponent(cmp) {
          const { component, props } = cmp;
          const el = component(props);
          return renderElement(el);
        }
        function renderClassComponent(cmp) {
          const { component, props } = cmp;
          const hash = (0, utils_1.strToHash)(component.toString());
          component.prototype._getHash = () => hash;
          const Component = new component(props);
          Component.beforeMount();
          let el = Component.render();
          el = renderElement(el);
          Component.elements = el;
          if (props === null || props === void 0 ? void 0 : props.ref)
            props.ref(Component);
          if (typeof isSSR === "undefined") {
            //@ts-ignore
            (0, utils_1.nextTick)(() => {
              Component._mount();
            });
          }
          return el;
        }
        function hNS(tag) {
          return document.createElementNS("http://www.w3.org/2000/svg", tag);
        }
        exports.hNS = hNS;
        function SVG(props) {
          const child = props.children[0];
          const attrs = child.attributes;
          const svg = hNS("svg");
          for (const attr of attrs) {
            svg.setAttribute(attr.name, attr.value);
          }
          svg.innerHTML = child.innerHTML;
          return svg;
        }

        /***/
      },

    /***/ "./src/core/state.ts":
      /*!***************************!*\
  !*** ./src/core/state.ts ***!
  \***************************/
      /***/ (__unused_webpack_module, exports) => {
        Object.defineProperty(exports, "__esModule", { value: true });
        exports._clearState = exports._state = void 0;
        exports._state = new Map();
        function _clearState() {
          exports._state.clear();
        }
        exports._clearState = _clearState;

        /***/
      },

    /***/ "./src/core/store.ts":
      /*!***************************!*\
  !*** ./src/core/store.ts ***!
  \***************************/
      /***/ (__unused_webpack_module, exports) => {
        Object.defineProperty(exports, "__esModule", { value: true });
        exports.Store = void 0;
        class Store {
          constructor(defaultState, name = "", storage = "memory") {
            this._listeners = new Map();
            if (isSSR) {
              storage = "memory";
            }
            this._id = name;
            this._storage = storage;
            this._state = this._prevState = defaultState;
            if (!this._storage || this._storage === "memory") {
              return;
            }
            const Storage = storage === "local" ? localStorage : sessionStorage;
            const item = Storage.getItem(this._id);
            if (item) {
              this._state = this._prevState = JSON.parse(item);
            } else {
              Storage.setItem(this._id, JSON.stringify(defaultState));
            }
          }
          persist(state) {
            if (this._storage === "memory") {
              return;
            }
            const Storage =
              this._storage === "local" ? localStorage : sessionStorage;
            Storage.setItem(this._id, JSON.stringify(state));
          }
          clear() {
            this._state = this._prevState = undefined;
            const Storage =
              this._storage === "local" ? localStorage : sessionStorage;
            Storage.removeItem(this._id);
          }
          set state(state) {
            this._prevState = this._state;
            this._state = state;
            this.persist(state);
            this._listeners.forEach((func) => {
              func(this._state, this._prevState);
            });
          }
          get state() {
            return this._state;
          }
          setState(state) {
            this.state = state;
          }
          use() {
            const id = Math.random().toString(36).substr(2, 9);
            const _this = this;
            return {
              get state() {
                return _this.state;
              },
              setState(state) {
                _this.setState(state);
              },
              subscribe(func) {
                _this._listeners.set(id, func);
              },
              cancel() {
                _this._listeners.delete(id);
              },
            };
          }
        }
        exports.Store = Store;

        /***/
      },

    /***/ "./src/core/withStyles.ts":
      /*!********************************!*\
  !*** ./src/core/withStyles.ts ***!
  \********************************/
      /***/ function (__unused_webpack_module, exports, __webpack_require__) {
        var __rest =
          (this && this.__rest) ||
          function (s, e) {
            var t = {};
            for (var p in s)
              if (
                Object.prototype.hasOwnProperty.call(s, p) &&
                e.indexOf(p) < 0
              )
                t[p] = s[p];
            if (s != null && typeof Object.getOwnPropertySymbols === "function")
              for (
                var i = 0, p = Object.getOwnPropertySymbols(s);
                i < p.length;
                i++
              ) {
                if (
                  e.indexOf(p[i]) < 0 &&
                  Object.prototype.propertyIsEnumerable.call(s, p[i])
                )
                  t[p[i]] = s[p[i]];
              }
            return t;
          };
        Object.defineProperty(exports, "__esModule", { value: true });
        exports.withStyles = void 0;
        const components_1 = __webpack_require__(
          /*! ../components */ "./src/components/index.ts",
        );
        const _1 = __webpack_require__(/*! . */ "./src/core/index.ts");
        function withStyles(styles) {
          return function (WrappedComponent) {
            return class extends _1.Component {
              render() {
                const _a = this.props,
                  { children } = _a,
                  rest = __rest(_a, ["children"]);
                const helmet = (0, _1.h)(
                  components_1.Helmet,
                  null,
                  (0, _1.h)("style", null, styles.toString()),
                );
                const component = children.length
                  ? (0, _1.h)(
                      WrappedComponent,
                      Object.assign({}, rest),
                      children,
                    )
                  : (0, _1.h)(WrappedComponent, Object.assign({}, this.props));
                return (0, _1.h)(_1.Fragment, null, helmet, component);
              }
            };
          };
        }
        exports.withStyles = withStyles;

        /***/
      },

    /***/ "./src/index.ts":
      /*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
      /***/ (__unused_webpack_module, exports, __webpack_require__) => {
        Object.defineProperty(exports, "__esModule", { value: true });
        exports.Visible =
          exports.Helmet =
          exports.Img =
          exports.ViraLink =
          exports.Route =
          exports.Switch =
          exports.Link =
          exports.Suspense =
          exports.Store =
          exports.lazyHydration =
          exports.createContext =
          exports.withStyles =
          exports.Component =
          exports.Fragment =
          exports.hydrate =
          exports.render =
          exports.h =
          exports.renderToString =
          exports.nextTick =
            void 0;
        var utils_1 = __webpack_require__(/*! ./utils */ "./src/utils.ts");
        Object.defineProperty(exports, "nextTick", {
          enumerable: true,
          get: function () {
            return utils_1.nextTick;
          },
        });
        var ssr_1 = __webpack_require__(/*! ./ssr */ "./src/ssr/index.ts");
        Object.defineProperty(exports, "renderToString", {
          enumerable: true,
          get: function () {
            return ssr_1.renderToString;
          },
        });
        var core_1 = __webpack_require__(/*! ./core */ "./src/core/index.ts");
        Object.defineProperty(exports, "h", {
          enumerable: true,
          get: function () {
            return core_1.h;
          },
        });
        Object.defineProperty(exports, "render", {
          enumerable: true,
          get: function () {
            return core_1.render;
          },
        });
        Object.defineProperty(exports, "hydrate", {
          enumerable: true,
          get: function () {
            return core_1.hydrate;
          },
        });
        Object.defineProperty(exports, "Fragment", {
          enumerable: true,
          get: function () {
            return core_1.Fragment;
          },
        });
        Object.defineProperty(exports, "Component", {
          enumerable: true,
          get: function () {
            return core_1.Component;
          },
        });
        Object.defineProperty(exports, "withStyles", {
          enumerable: true,
          get: function () {
            return core_1.withStyles;
          },
        });
        Object.defineProperty(exports, "createContext", {
          enumerable: true,
          get: function () {
            return core_1.createContext;
          },
        });
        Object.defineProperty(exports, "lazyHydration", {
          enumerable: true,
          get: function () {
            return core_1.lazyHydration;
          },
        });
        Object.defineProperty(exports, "Store", {
          enumerable: true,
          get: function () {
            return core_1.Store;
          },
        });
        var components_1 = __webpack_require__(
          /*! ./components */ "./src/components/index.ts",
        );
        Object.defineProperty(exports, "Suspense", {
          enumerable: true,
          get: function () {
            return components_1.Suspense;
          },
        });
        Object.defineProperty(exports, "Link", {
          enumerable: true,
          get: function () {
            return components_1.Link;
          },
        });
        Object.defineProperty(exports, "Switch", {
          enumerable: true,
          get: function () {
            return components_1.Switch;
          },
        });
        Object.defineProperty(exports, "Route", {
          enumerable: true,
          get: function () {
            return components_1.Route;
          },
        });
        Object.defineProperty(exports, "ViraLink", {
          enumerable: true,
          get: function () {
            return components_1.ViraLink;
          },
        });
        Object.defineProperty(exports, "Img", {
          enumerable: true,
          get: function () {
            return components_1.Img;
          },
        });
        Object.defineProperty(exports, "Helmet", {
          enumerable: true,
          get: function () {
            return components_1.Helmet;
          },
        });
        Object.defineProperty(exports, "Visible", {
          enumerable: true,
          get: function () {
            return components_1.Visible;
          },
        });
        const core_2 = __webpack_require__(/*! ./core */ "./src/core/index.ts");
        const ssr_2 = __webpack_require__(/*! ./ssr */ "./src/ssr/index.ts");
        exports["default"] = {
          render: core_2.render,
          hydrate: core_2.hydrate,
          h: core_2.h,
          lazyHydration: core_2.lazyHydration,
          renderToString: ssr_2.renderToString,
          Fragment: core_2.Fragment,
        };

        /***/
      },

    /***/ "./src/ssr/document.ts":
      /*!*****************************!*\
  !*** ./src/ssr/document.ts ***!
  \*****************************/
      /***/ (__unused_webpack_module, exports, __webpack_require__) => {
        Object.defineProperty(exports, "__esModule", { value: true });
        exports.DocumentSSR = void 0;
        const _1 = __webpack_require__(/*! . */ "./src/ssr/index.ts");
        class DocumentSSR {
          constructor() {
            this.body = this.createElement("body");
            this.head = this.createElement("head");
          }
          createElement(tag) {
            return new _1.HTMLElementSSR(tag);
          }
          createElementNS(_URI, tag) {
            return new _1.HTMLElementSSR(tag);
          }
          createTextNode(text) {
            return text;
          }
          querySelector(_query) {
            return undefined;
          }
        }
        exports.DocumentSSR = DocumentSSR;

        /***/
      },

    /***/ "./src/ssr/elements.ts":
      /*!*****************************!*\
  !*** ./src/ssr/elements.ts ***!
  \*****************************/
      /***/ (__unused_webpack_module, exports) => {
        Object.defineProperty(exports, "__esModule", { value: true });
        exports.HTMLElementSSR = void 0;
        class HTMLElementSSR {
          constructor(tag) {
            this.tagName = tag;
            const selfClosing = [
              "area",
              "base",
              "br",
              "col",
              "embed",
              "hr",
              "img",
              "input",
              "link",
              "meta",
              "param",
              "source",
              "track",
              "wbr",
            ];
            if (selfClosing.indexOf(tag) >= 0) {
              this.ssr = `<${tag} />`;
              this.selfClosing = true;
            } else {
              this.ssr = `<${tag}></${tag}>`;
            }
          }
          get outerHTML() {
            return this.innerText;
          }
          get innerHTML() {
            var _a, _b;
            const reg = /(^<[a-z]+>)([\s\S]*)(<\/[a-z]+>$)/gm;
            return (_b =
              (_a = reg.exec(this.ssr)) === null || _a === void 0
                ? void 0
                : _a[2]) !== null && _b !== void 0
              ? _b
              : "";
          }
          get innerText() {
            var _a, _b;
            const reg = /(^<[^>]+>)(.+)?(<\/[a-z]+>$|\/>$)/gm;
            return (_b =
              (_a = reg.exec(this.ssr)) === null || _a === void 0
                ? void 0
                : _a[2]) !== null && _b !== void 0
              ? _b
              : "";
          }
          set innerText(text) {
            const reg = /(^<[^>]+>)(.+)?(<\/[a-z]+>$|\/>$)/gm;
            this.ssr = this.ssr.replace(reg, `$1${text}$3`);
          }
          get attributes() {
            return { length: 1 };
          }
          get children() {
            const reg = /<([a-z]+)((?!<\/\1).)*<\/\1>/gms;
            const array = [];
            let match;
            while ((match = reg.exec(this.innerHTML)) !== null) {
              array.push(match[0].replace(/[\s]+/gm, " "));
            }
            return array;
          }
          setAttributeNS(name, value) {
            this.setAttribute(name, value);
          }
          setAttribute(name, value) {
            if (this.selfClosing)
              this.ssr = this.ssr.replace(
                /(^<[a-z]+ )(.+)/gm,
                `$1${name}="${value}" $2`,
              );
            else
              this.ssr = this.ssr.replace(
                /(^<[^>]+)(.+)/gm,
                `$1 ${name}="${value}"$2`,
              );
          }
          appendChild(child) {
            const append = child.ssr ? child.ssr : child;
            const index = this.ssr.lastIndexOf("</");
            this.ssr =
              this.ssr.substring(0, index) + append + this.ssr.substring(index);
          }
          replaceChild(newChild, _oldChild) {
            this.innerText = newChild.ssr;
          }
          addEventListener(_type, _listener, _options) {}
        }
        exports.HTMLElementSSR = HTMLElementSSR;

        /***/
      },

    /***/ "./src/ssr/index.ts":
      /*!**************************!*\
  !*** ./src/ssr/index.ts ***!
  \**************************/
      /***/ (__unused_webpack_module, exports, __webpack_require__) => {
        Object.defineProperty(exports, "__esModule", { value: true });
        exports.HTMLElementSSR =
          exports.DocumentSSR =
          exports.renderToString =
            void 0;
        var renderToString_1 = __webpack_require__(
          /*! ./renderToString */ "./src/ssr/renderToString.ts",
        );
        Object.defineProperty(exports, "renderToString", {
          enumerable: true,
          get: function () {
            return renderToString_1.renderToString;
          },
        });
        var document_1 = __webpack_require__(
          /*! ./document */ "./src/ssr/document.ts",
        );
        Object.defineProperty(exports, "DocumentSSR", {
          enumerable: true,
          get: function () {
            return document_1.DocumentSSR;
          },
        });
        var elements_1 = __webpack_require__(
          /*! ./elements */ "./src/ssr/elements.ts",
        );
        Object.defineProperty(exports, "HTMLElementSSR", {
          enumerable: true,
          get: function () {
            return elements_1.HTMLElementSSR;
          },
        });

        /***/
      },

    /***/ "./src/ssr/renderToString.ts":
      /*!***********************************!*\
  !*** ./src/ssr/renderToString.ts ***!
  \***********************************/
      /***/ (__unused_webpack_module, exports, __webpack_require__) => {
        Object.defineProperty(exports, "__esModule", { value: true });
        exports.renderToString = exports.initSSR = void 0;
        const _1 = __webpack_require__(/*! . */ "./src/ssr/index.ts");
        const core_1 = __webpack_require__(
          /*! ../core */ "./src/core/index.ts",
        );
        const utils_1 = __webpack_require__(/*! ../utils */ "./src/utils.ts");
        globalThis.isSSR = (0, utils_1.detectSSR)() === true ? true : undefined;
        globalThis._nano = { isSSR, location: { pathname: "/" } };
        function initSSR(pathname = "/") {
          _nano.location = { pathname };
          // @ts-ignore
          globalThis.document = isSSR ? new _1.DocumentSSR() : window.document;
        }
        exports.initSSR = initSSR;
        function renderToString(component, options = {}) {
          const { pathname, clearState = true } = options;
          initSSR(pathname);
          if (clearState) core_1._state.clear();
          return (0, core_1.render)(component, null, true).join("");
        }
        exports.renderToString = renderToString;

        /***/
      },

    /***/ "./src/utils.ts":
      /*!**********************!*\
  !*** ./src/utils.ts ***!
  \**********************/
      /***/ (__unused_webpack_module, exports, __webpack_require__) => {
        Object.defineProperty(exports, "__esModule", { value: true });
        exports.addStylesToHead =
          exports.nodeToString =
          exports.task =
          exports.onNodeRemove =
          exports.isDescendant =
          exports.strToHash =
          exports.detectSSR =
          exports.isEvent =
          exports.nextTick =
            void 0;
        const _1 = __webpack_require__(/*! . */ "./src/index.ts");
        exports.nextTick =
          typeof Promise === "function"
            ? Promise.prototype.then.bind(Promise.resolve())
            : setTimeout;
        function isEvent(el, prop) {
          if (prop.indexOf("on") !== 0) {
            return false;
          }
          if (el.ssr) return true;
          return ["function", "object"].includes(typeof el[prop]);
        }
        exports.isEvent = isEvent;
        function detectSSR() {
          return (
            //@ts-ignore
            typeof Deno !== "undefined" ||
            typeof window === "undefined" /* && isSSR */
          );
        }
        exports.detectSSR = detectSSR;
        function strToHash(str) {
          let hash = 0;
          if (!str.length) return hash;
          for (let i = 0; i < str.length; i++) {
            const char = str.charCodeAt(i);
            hash = (hash << 5) - hash + char;
            hash |= 0;
          }
          return Math.abs(hash).toString(32);
        }
        exports.strToHash = strToHash;
        function isDescendant(descendant, root) {
          return (
            descendant &&
            (descendant === root || isDescendant(descendant.parentNode, root))
          );
        }
        exports.isDescendant = isDescendant;
        function onNodeRemove(el, callback) {
          let observer = new MutationObserver((mutList) => {
            for (const mut of mutList) {
              mut.removedNodes.forEach((removedNode) => {
                if (isDescendant(el, removedNode)) {
                  callback();
                  if (observer) {
                    observer.disconnect();
                    // @ts-ignore
                    observer = undefined;
                  }
                }
              });
            }
          });
          observer.observe(document, {
            childList: true,
            subtree: true,
          });
          return observer;
        }
        exports.onNodeRemove = onNodeRemove;
        function task(func) {
          return setTimeout(func, 0);
        }
        exports.task = task;
        function nodeToString(node) {
          const temp = document.createDocumentFragment();
          temp.appendChild(node.cloneNode(true));
          return temp.toString();
        }
        exports.nodeToString = nodeToString;
        const addStylesToHead = (styles, hash) => {
          const el = document.querySelector(`[data-css-hash*="${hash}"]`);
          if (!el) {
            const styleElement = (0, _1.h)(
              "style",
              { "data-css-hash": hash },
              styles,
            );
            document.head.appendChild(styleElement);
          }
        };
        exports.addStylesToHead = addStylesToHead;

        /***/
      },

    /******/
  };
  /************************************************************************/
  /******/ // The module cache
  /******/ var __webpack_module_cache__ = {};
  /******/
  /******/ // The require function
  /******/ function __webpack_require__(moduleId) {
    /******/ // Check if module is in cache
    /******/ var cachedModule = __webpack_module_cache__[moduleId];
    /******/ if (cachedModule !== undefined) {
      /******/ return cachedModule.exports;
      /******/
    }
    /******/ // Create a new module (and put it into the cache)
    /******/ var module = (__webpack_module_cache__[moduleId] = {
      /******/ // no module.id needed
      /******/ // no module.loaded needed
      /******/ exports: {},
      /******/
    });
    /******/
    /******/ // Execute the module function
    /******/ __webpack_modules__[moduleId].call(
      module.exports,
      module,
      module.exports,
      __webpack_require__,
    );
    /******/
    /******/ // Return the exports of the module
    /******/ return module.exports;
    /******/
  }
  /******/
  /************************************************************************/
  var __webpack_exports__ = {};
  // This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
  (() => {
    var exports = __webpack_exports__;
    /*!*****************************!*\
  !*** ./src/bundles/full.ts ***!
  \*****************************/

    Object.defineProperty(exports, "__esModule", { value: true });
    const __1 = __webpack_require__(/*! .. */ "./src/index.ts");
    exports["default"] = {
      Suspense: __1.Suspense,
      Link: __1.Link,
      Switch: __1.Switch,
      Route: __1.Route,
      ViraLink: __1.ViraLink,
      Img: __1.Img,
      Helmet: __1.Helmet,
      Visible: __1.Visible,
      h: __1.h,
      nextTick: __1.nextTick,
      render: __1.render,
      hydrate: __1.hydrate,
      renderToString: __1.renderToString,
      Fragment: __1.Fragment,
      Component: __1.Component,
      withStyles: __1.withStyles,
      createContext: __1.createContext,
      lazyHydration: __1.lazyHydration,
      Store: __1.Store,
    };
  })();

  vira = __webpack_exports__["default"];
  /******/
})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
